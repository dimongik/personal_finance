
#Область Создание_элементов_формы

Процедура ДобавитьРеквизитНаФорму(Элементы, ВидПоля, Имя, Заголовок = "", ПутьКДанным = Неопределено, Родитель, ДополнительныеПараметры = Неопределено, ЭлементПосле = Неопределено)
	
	Если ТипЗнч(ВидПоля) = Тип("ВидДекорацииФормы") Тогда 
		ПолеВвода = Элементы.Вставить(Имя, Тип("ДекорацияФормы"), Родитель, ЭлементПосле);
	ИначеЕсли ТипЗнч(ВидПоля) = Тип("ВидПоляФормы") Тогда 
		ПолеВвода = Элементы.Вставить(Имя, Тип("ПолеФормы"), Родитель, ЭлементПосле);
	Иначе
		ТекстИсключения = "Неизвестный тип поля формы";
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;	
	
	ПолеВвода.Заголовок = Заголовок;
	ПолеВвода.Вид 		= ВидПоля;
	
	// + Семейкин Д.С. 21.01.2020
	//Если ПутьКДанным<>Неопределено тогда
	Если ЗначениеЗаполнено(ПутьКДанным) Тогда 
	// - Семейкин Д.С. 21.01.2020
		ПолеВвода.ПутьКДанным = ПутьКДанным;
	КонецЕсли;	
	
	Если ДополнительныеПараметры <> Неопределено тогда
		ЗаполнитьЗначенияСвойств(ПолеВвода, ДополнительныеПараметры);
		Если ДополнительныеПараметры.Свойство("Обработчики") тогда
			Для Каждого ТекСобытие из ДополнительныеПараметры.Обработчики цикл
				ПолеВвода.УстановитьДействие(ТекСобытие.Ключ, ТекСобытие.Значение);
			КонецЦикла;				 
		КонецЕсли;			 
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьКомандуНаФорму(Элементы, ВидКнопки, Имя, Заголовок = "", ИмяКоманды, Родитель, ДополнительныеПараметры = Неопределено, ЭлементПосле = Неопределено) Экспорт
	
	КомандаФормы = Элементы.Вставить(Имя, Тип("КнопкаФормы"), Родитель, ЭлементПосле);
	
	КомандаФормы.Вид        = ВидКнопки;
	КомандаФормы.ИмяКоманды = ИмяКоманды;
	КомандаФормы.Заголовок  = Заголовок;
	
	Если ДополнительныеПараметры <> Неопределено тогда
		ЗаполнитьЗначенияСвойств(КомандаФормы, ДополнительныеПараметры);
	КонецЕсли;
	 
КонецПроцедуры
	
Процедура ДобавитьТаблицуНаФормуПоТаблицеЗначений(Форма, Таблица, Имя, Заголовок = "", Родитель = Неопределено, ДополнительныеПараметры = Неопределено, ЭлементПосле = Неопределено)
	
	Реквизиты = Новый Массив;
	Реквизиты.Добавить(Новый РеквизитФормы(Имя, Новый ОписаниеТипов("ТаблицаЗначений")));
	Для Каждого Ст ИЗ Таблица.Колонки Цикл
		Реквизиты.Добавить(Новый РеквизитФормы(Ст.Имя, Ст.ТипЗначения, Имя));
	КонецЦикла;
	
	Форма.ИзменитьРеквизиты(Реквизиты);	
	
	Таб = Форма.Элементы.Вставить("ржЭлементы" + Имя, Тип("ТаблицаФормы"), Родитель, ЭлементПосле);
	Таб.ПутьКДанным = Имя;
	
	Для Каждого Ст ИЗ Таблица.Колонки Цикл
		Рек = Форма.Элементы.Добавить("ржЭлементы" + Ст.Имя, Тип("ПолеФормы"), Таб);
		Рек.Вид         = ВидПоляФормы.ПолеНадписи;
		Рек.ПутьКДанным = Имя + "." + Ст.Имя;
		Рек.Заголовок   = Ст.Имя;
	КонецЦикла;
	
	Форма.ЗначениеВРеквизитФормы(Таблица, Имя);	
	
	Таб.Заголовок = Заголовок;
	
	Если ДополнительныеПараметры <> Неопределено Тогда 
		ЗаполнитьЗначенияСвойств(Таб,ДополнительныеПараметры);
		Если ДополнительныеПараметры.Свойство("Обработчики") Тогда 
			Для Каждого ТекСобытие из ДополнительныеПараметры.Обработчики Цикл 
				Таб.УстановитьДействие(ТекСобытие.Ключ, ТекСобытие.Значение);
			КонецЦикла;				 
		КонецЕсли;			 
	КонецЕсли;	
КонецПроцедуры	
	
Процедура ДобавитьГруппуНаФорму(Элементы, ВидГруппы, Имя, Заголовок = "", ПутьКДанным = Неопределено, Родитель = Неопределено, ДополнительныеПараметры = Неопределено, ЭлементПосле = Неопределено) Экспорт 
	ПолеГруппы = Элементы.Вставить(Имя, Тип("ГруппаФормы"), Родитель, ЭлементПосле);
	
	ПолеГруппы.Заголовок = Заголовок;
	ПолеГруппы.Вид       = ВидГруппы;
	
	Если ДополнительныеПараметры<>Неопределено тогда
		ЗаполнитьЗначенияСвойств(ПолеГруппы, ДополнительныеПараметры);
	КонецЕсли;	
КонецПРоцедуры	

Процедура ДобавитьТаблицуНаФорму(Форма, Тип, Имя, Заголовок, ПутьКДанным, Родитель = Неопределено, ДополнительныеПараметры = Неопределено)
	Таб = Форма.Элементы.Добавить(Имя, Тип, Родитель);
	Таб.ПутьКДанным = ПутьКДанным;	
	Таб.Заголовок   = Заголовок;
	
	Если ДополнительныеПараметры <> Неопределено тогда
		ЗаполнитьЗначенияСвойств(Таб, ДополнительныеПараметры);
		Если ДополнительныеПараметры.Свойство("Обработчики") Тогда 
			Для Каждого ТекСобытие из ДополнительныеПараметры.Обработчики Цикл 
				Таб.УстановитьДействие(ТекСобытие.Ключ, ТекСобытие.Значение);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимостьЭлементаФормы(Форма, Имя, Видимость)
	НайдЭлемент = Форма.Элементы.Найти(Имя);
	Если НайдЭлемент <> Неопределено Тогда 
		НайдЭлемент.Видимость = Видимость;
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьРеквизитПризнакСущесвованияОсновнойЕдиницыХранения(Форма, Имя, Тип, Путь, Заголовок = "", СохраняемыеДанные = Ложь)
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Имя, Тип, Путь, Заголовок, СохраняемыеДанные));
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
КонецПроцедуры

Процедура ДобавитьРеквизитФормы(Форма, Имя, Тип, Путь = "", Заголовок = "", СохраняемыеДанные = Ложь) Экспорт
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Имя, Тип, Путь, Заголовок, СохраняемыеДанные));
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
КонецПроцедуры

Процедура ДобавитьКомандуФормы(Форма, ИмяКоманды, Заголовок = "", Действие, ИзменяетСохраняемыеДанные = Истина, ДополнительныеПараметры = Неопределено) Экспорт 
	
	КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
	КомандаФормы.Заголовок = Заголовок;
	КомандаФормы.Действие  = Действие;
	КомандаФормы.ИзменяетСохраняемыеДанные = ИзменяетСохраняемыеДанные;
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(КомандаФормы, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьДекорациюНаФорму(Элементы, ВидДекорации, Имя, Заголовок = "", Родитель, ДополнительныеПараметры = Неопределено, ЭлементПосле = Неопределено)
	
	//Протестировать
	Декорация = Элементы.Вставить(Имя,Тип("ДекорацияФормы"), Родитель, ЭлементПосле);
	Декорация.Заголовок = Заголовок;
	Декорация.Вид 		= ВидДекорации;
	
	Если ДополнительныеПараметры <> Неопределено тогда
		ЗаполнитьЗначенияСвойств(Декорация, ДополнительныеПараметры);
		Если ДополнительныеПараметры.Свойство("Обработчики") тогда
			Для Каждого ТекСобытие из ДополнительныеПараметры.Обработчики цикл
				Декорация.УстановитьДействие(ТекСобытие.Ключ, ТекСобытие.Значение);
			КонецЦикла;				 
		КонецЕсли;			 
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область Пример_использования

// Пример использования
// См. внимательно различие между ДобавитьРеквизитНаФорму( и ДобавитьРеквизитФормы(
// ДобавитьРеквизитНаФорму( 	- создает элемент формы 
// ДобавитьРеквизитФормы(	- создает именно реквизит формы который можно вынести как элемент методом ДобавитьРеквизитНаФорму(
Процедура Справочник_СоглашенияСКлиентами_ФормаЭлемента_ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	// + Семейкин Д.С. 20.01.2020 // Сроки действия заказов
	Обработчики = Новый Соответствие;
	Обработчики.Вставить("ПриИзменении","ржПриИзмененииСозданныхРеквизитов");
	ДополнительныеПараметры = Новый Структура("Обработчики", Обработчики);
	
	ДобавитьГруппуНаФорму(Элементы, ВидГруппыФормы.Страница, "ржСтраницаСрокиДействияЗаказов", "Сроки действия заказов", , Элементы.ГруппаСтраницы);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	ДополнительныеПараметры.Вставить("Ширина", 28);
	ДобавитьРеквизитНаФорму(Элементы,ВидПоляФормы.ПолеВвода,"ржКалендарь", "Календарь", "Объект.ржКалендарь", Элементы.ржСтраницаСрокиДействияЗаказов, ДополнительныеПараметры);	
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	ДополнительныеПараметры.Вставить("Ширина", 12);
	ДобавитьРеквизитНаФорму(Элементы,ВидПоляФормы.ПолеВвода,"ржТипДнейКалендаря", "Тип дней", "Объект.ржТипДнейКалендаря", Элементы.ржСтраницаСрокиДействияЗаказов, ДополнительныеПараметры);	
	
	ДобавитьРеквизитФормы(Форма, "ржЭлементыЕдиницаИзмерения",   Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"), "", "", Ложь);
	
	ДобавитьТаблицуНаФорму(Форма, Тип("ТаблицаФормы"), "ржСрокиДействияЗаказов", "", "Объект.ржСрокиДействияЗаказов", Элементы.ржСтраницаСрокиДействияЗаказов);
	ДобавитьРеквизитНаФорму(Форма.Элементы, ВидПоляФормы.ПолеВвода, "ржСрокиДействияЗаказовСтатус", , "Объект.ржСрокиДействияЗаказов.Статус", Элементы.ржСрокиДействияЗаказов);
	ДобавитьРеквизитНаФорму(Форма.Элементы, ВидПоляФормы.ПолеВвода, "ржСрокиДействияЗаказовДействуетДней", "Действует дней", "Объект.ржСрокиДействияЗаказов.ДействуетДней",  Элементы.ржСрокиДействияЗаказов);
	ДобавитьРеквизитНаФорму(Форма.Элементы, ВидПоляФормы.ПолеВвода, "ржСрокиДействияЗаказовКоличествоПродлений", "Кол-во продлений", "Объект.ржСрокиДействияЗаказов.КоличествоПродлений", Элементы.ржСрокиДействияЗаказов);
	// - Семейкин Д.С. 20.01.2020
	
	Если Объект.Типовое Тогда
		
		ШрифтЗаголовка = Новый Шрифт(Элементы.ГруппаУсловияОплаты.ШрифтЗаголовка);
		
		ДобавитьГруппуНаФорму(Элементы, 
			ВидГруппыФормы.ОбычнаяГруппа, 
			"ржГруппаДоступностьРучныхСкидок",
			"Ручные скидки доступны",, 
			Элементы.ГруппаПараметрыПраво, 
			Новый Структура("Группировка, Отображение, Ширина, ШрифтЗаголовка", 
				ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ОтображениеОбычнойГруппы.ОбычноеВыделение, 60, ШрифтЗаголовка));
				
		// Статусы заказов
		ДобавитьТаблицуНаФорму(Форма, 
			Тип("ТаблицаФормы"), 
			"ржСтатусыЗаказов",
			"В статусах", 
			"Объект.ржСтатусыЗаказов",
			Элементы.ржГруппаДоступностьРучныхСкидок,
			Новый Структура("АвтоМаксимальнаяШирина, Высота, РастягиватьПоГоризонтали, РастягиватьПоВертикали, ПоложениеЗаголовка", 
				Ложь, 5, Ложь, Ложь, ПоложениеЗаголовкаЭлементаФормы.Верх));
			
		ДобавитьРеквизитНаФорму(Форма.Элементы, 
			ВидПоляФормы.ПолеВвода, 
			"ржСтатусыЗаказовСтатус",, 
			"Объект.ржСтатусыЗаказов.Статус", 
			Элементы.ржСтатусыЗаказов);
			
		// Состояние обеспечения для скидок
		ДобавитьТаблицуНаФорму(Форма, 
			Тип("ТаблицаФормы"), 
			"ржСостоянияОбеспеченияДляСкидок",
			"Состояние обеспечения", 
			"Объект.ржСостоянияОбеспеченияДляСкидок",
			Элементы.ржГруппаДоступностьРучныхСкидок,
			Новый Структура("АвтоМаксимальнаяШирина, Высота, РастягиватьПоГоризонтали, РастягиватьПоВертикали, ПоложениеЗаголовка", 
				Ложь, 5, Ложь, Ложь, ПоложениеЗаголовкаЭлементаФормы.Верх));
			
		ДобавитьРеквизитНаФорму(Форма.Элементы, 
			ВидПоляФормы.ПолеВвода, 
			"ржСостоянияОбеспеченияДляСкидокСостояниеОбеспечения",, 
			"Объект.ржСостоянияОбеспеченияДляСкидок.СостояниеОбеспечения", 
			Элементы.ржСостоянияОбеспеченияДляСкидок);
			
		// Виды заказов
		ДобавитьТаблицуНаФорму(Форма, 
			Тип("ТаблицаФормы"), 
			"ржВидыЗаказов",
			"Для видов заказов", 
			"Объект.ржВидыЗаказов",
			Элементы.ржГруппаДоступностьРучныхСкидок,
			Новый Структура("АвтоМаксимальнаяШирина, Высота, РастягиватьПоГоризонтали, РастягиватьПоВертикали, ПоложениеЗаголовка", 
				Ложь, 5, Ложь, Ложь, ПоложениеЗаголовкаЭлементаФормы.Верх));
				
		ДобавитьРеквизитНаФорму(Форма.Элементы, 
			ВидПоляФормы.ПолеВвода, 
			"ржВидыЗаказовВидЗаказа",, 
			"Объект.ржВидыЗаказов.ВидЗаказа", 
			Элементы.ржВидыЗаказов);
			
		// Группа Ограничения скидок/наценок
		ДобавитьГруппуНаФорму(Элементы, 
			ВидГруппыФормы.ОбычнаяГруппа, 
			"ржГруппаОграниченияСкидокНаценок",
			"Ограничения скидок/наценок",, 
			Элементы.ГруппаРучныеСкидкиНаценки, 
			Новый Структура("Группировка, Отображение, Ширина, ШрифтЗаголовка", 
				ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, ОтображениеОбычнойГруппы.ОбычноеВыделение, 60, ШрифтЗаголовка));
			
		// Ограничения скидок наценок
		ДобавитьТаблицуНаФорму(Форма, 
			Тип("ТаблицаФормы"), 
			"ржОграниченияСкидокНаценок",
			"Ограничения скидок/наценок", 
			"Объект.ржОграниченияСкидокНаценок",
			Элементы.ржГруппаОграниченияСкидокНаценок,
			Новый Структура("АвтоМаксимальнаяШирина, Высота, РастягиватьПоГоризонтали, РастягиватьПоВертикали, ПоложениеЗаголовка", 
				Ложь, 5, Ложь, Ложь, ПоложениеЗаголовкаЭлементаФормы.Нет));
				
		ДобавитьРеквизитНаФорму(Форма.Элементы, 
			ВидПоляФормы.ПолеВвода, 
			"ржОграниченияСкидокНаценокВидНоменклатуры",, 
			"Объект.ржОграниченияСкидокНаценок.ВидНоменклатуры", 
			Элементы.ржОграниченияСкидокНаценок);
			
		ДобавитьРеквизитНаФорму(Форма.Элементы, 
			ВидПоляФормы.ПолеВвода, 
			"ржОграниченияСкидокНаценокМаксимальныйПроцентРучнойСкидки",, 
			"Объект.ржОграниченияСкидокНаценок.МаксимальныйПроцентРучнойСкидки", 
			Элементы.ржОграниченияСкидокНаценок);
			
		ДобавитьРеквизитНаФорму(Форма.Элементы, 
			ВидПоляФормы.ПолеВвода, 
			"ржОграниченияСкидокНаценокМаксимальнаяСуммаРучнойСкидки",, 
			"Объект.ржОграниченияСкидокНаценок.МаксимальнаяСуммаРучнойСкидки", 
			Элементы.ржОграниченияСкидокНаценок);
			
		ДобавитьРеквизитНаФорму(Форма.Элементы, 
			ВидПоляФормы.ПолеВвода, 
			"ржОграниченияСкидокНаценокМаксимальныйПроцентРучнойНаценки",, 
			"Объект.ржОграниченияСкидокНаценок.МаксимальныйПроцентРучнойНаценки", 
			Элементы.ржОграниченияСкидокНаценок);
			
		ДобавитьРеквизитНаФорму(Форма.Элементы, 
			ВидПоляФормы.ПолеВвода, 
			"ржОграниченияСкидокНаценокМаксимальнаяСуммаРучнойНаценки",, 
			"Объект.ржОграниченияСкидокНаценок.МаксимальнаяСуммаРучнойНаценки", 
			Элементы.ржОграниченияСкидокНаценок);
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПриСозданииНаСервере

//Можно добавить универсальный вызов в необходимые формы.
//Переадресацию выполнять здесь
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Попытка
		ИмяФормы = Форма.ИмяФормы;
	Исключение
		ИмяФормы = "";
	КонецПопытки;
	
	Если ИмяФормы = "Обработка.АРМБюджет.Форма.Форма" Тогда 
		Обработка_АРМБюджет_Форма(Форма, Отказ, СтандартнаяОбработка);			
	КонецЕсли;
		
КонецПроцедуры

#Область Справочники



#КонецОбласти

#Область Документы
	
#КонецОбласти

#Область Обработки
	
// Обработка АРМБюджет форма.
// 
// Параметры:
//  Форма 					- Обработка.АРМБюджет.Форма.Форма
//  Отказ 					- Булево
//  СтандартнаяОбработка 	- Булево
Процедура Обработка_АРМБюджет_Форма(Форма, Отказ, СтандартнаяОбработка)
	
	Элементы		= Форма.Элементы;
	ГруппаРодитель 	= Элементы.ГруппаДанные;
	
	СтатьиЗатрат = Форма.Объект.СтатьиЗатрат;
	
	Для Каждого СтатьяЗатрат Из СтатьиЗатрат Цикл

		ИмяКорень = СтатьяЗатрат.ИмяДляРазработчика;

		ДопПараметрыГруппа = Новый Структура;
		ДопПараметрыГруппа.Вставить("ОтображатьЗаголовок", Ложь);
		ДопПараметрыГруппа.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
		ИмяГруппы = "ГруппаДетали_" + ИмяКорень;
		ДобавитьГруппуНаФорму(Элементы, ВидГруппыФормы.ОбычнаяГруппа, ИмяГруппы, "", , ГруппаРодитель,
			ДопПараметрыГруппа);

		Родитель = Элементы[ИмяГруппы];

		ПутьКДанным = СтрШаблон("Объект.СтатьиЗатрат[%1].СтатьяЗатрат", Формат(СтатьяЗатрат.НомерСтроки - 1,
			"ЧН=0; ЧГ=0"));
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
		ДопПараметры.Вставить("Рамка", Новый Рамка(ТипРамкиЭлементаУправления.Одинарная));
		ДопПараметры.Вставить("ЦветРамки", Новый Цвет(178, 178, 178));
		ДопПараметры.Вставить("Ширина", 30);
		ДопПараметры.Вставить("Высота", 1);
		ДопПараметры.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Лево);
		ДопПараметры.Вставить("ВертикальноеПоложение", ВертикальноеПоложениеЭлемента.Центр);
		ДопПараметры.Вставить("ВертикальноеПоложениеВГруппе", ВертикальноеПоложениеЭлемента.Центр);
		ДопПараметры.Вставить("ЦветТекста", Новый Цвет(47, 79, 79)); // темно-грифильно-серый
		ДопПараметры.Вставить("Шрифт", Новый Шрифт(, 14, , , )); 
		ДопПараметры.Вставить("РастягиватьПоГоризонтали", Ложь);
		ИмяПолеНадписи = "ПолеСтатья_" + ИмяКорень;
		ДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеНадписи, ИмяПолеНадписи, , ПутьКДанным, Родитель,
			ДопПараметры);

		Обработчики = Новый Соответствие;
		Обработчики.Вставить("ПриИзменении", "Подключаемый_ПриИзмененииРеквизита");
		
		ПутьКДанным = СтрШаблон("Объект.СтатьиЗатрат[%1].СуммаПлан", Формат(СтатьяЗатрат.НомерСтроки - 1, "ЧН=0; ЧГ=0"));
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
		ДопПараметры.Вставить("Ширина", 6);
		ДопПараметры.Вставить("РастягиватьПоГоризонтали", Ложь);
		ДопПараметры.Вставить("ВертикальноеПоложениеВГруппе", ВертикальноеПоложениеЭлемента.Центр);
		ДопПараметры.Вставить("Обработчики", Обработчики);
		ИмяПолеНадписи = "ПолеСуммаПлан_" + ИмяКорень;
		ДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеВвода, ИмяПолеНадписи, , ПутьКДанным, Родитель, ДопПараметры);

		ПутьКДанным = СтрШаблон("Объект.СтатьиЗатрат[%1].СуммаФакт", Формат(СтатьяЗатрат.НомерСтроки - 1, "ЧН=0; ЧГ=0"));
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
		ДопПараметры.Вставить("Ширина", 8);
		ДопПараметры.Вставить("РастягиватьПоГоризонтали", Ложь);
		ДопПараметры.Вставить("ВертикальноеПоложениеВГруппе", ВертикальноеПоложениеЭлемента.Центр);
		ДопПараметры.Вставить("ГоризонтальноеПоложениеВГруппе", ГоризонтальноеПоложениеЭлемента.Право);
		ДопПараметры.Вставить("Рамка", Новый Рамка(ТипРамкиЭлементаУправления.Одинарная));
		ДопПараметры.Вставить("ЦветРамки", Новый Цвет(178, 178, 178));
		ИмяПолеНадписи = "ПолеСуммаФакт_" + ИмяКорень;
		ДобавитьРеквизитНаФорму(Элементы, ВидПоляФормы.ПолеНадписи, ИмяПолеНадписи, , ПутьКДанным, Родитель,
			ДопПараметры);
	КонецЦикла;
		
КонецПроцедуры	
	
#КонецОбласти

#Область РегистрыСведений


#КонецОбласти

#Область ОбщиеФормы

#КонецОбласти

#КонецОбласти

#Область ПослеЗаписиНаСервере

//Аналогично ПриСозданииНаСервере(
Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи)Экспорт
	
	Попытка
		ИмяФормы = Форма.ИмяФормы;
	Исключение
		ИмяФормы = "";
	КонецПопытки;
	
	//Пример
	//Если ИмяФормы = "Справочник.СертификатыНоменклатуры.Форма.ФормаЭлемента"
	//	Или ИмяФормы = "Справочник.СертификатыНоменклатуры.Форма.ржФормаЭлемента" тогда
	//	
	//	ржСобытияОбъектов.Справочник_СертификатыНоменклатуры_ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);
	//ИначеЕсли ИмяФормы = "Справочник.Контрагенты.Форма.ФормаЭлемента" Тогда
	//	Справочник_Контрагенты_ФормаЭлемента_ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);
	//КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#Область ПередЗаписьюНаСервере

//Аналогично ПриСозданииНаСервере(
Процедура ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи)Экспорт
	
	Попытка
		ИмяФормы = Форма.ИмяФормы;
	Исключение
		ИмяФормы = "";
	КонецПопытки;
	
	Элементы = Форма.Элементы;
	//Пример
	//Если ИмяФормы = "Справочник.СерииНоменклатуры.Форма.ФормаЭлемента" тогда
	//	ржСобытияОбъектов.Справочник_СерииНоменклатуры_ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	//ИначеЕсли ИмяФормы = "Справочник.Номенклатура.Форма.ФормаЭлемента" Тогда 
	//	Справочник_Номенклатура_ФормаЭлемента_ПередЗаписьюНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);
	//КонецЕсли;
	
КонецПроцедуры

#Область Справочники

#КонецОбласти

#КонецОбласти

#Область ПриИзменении

#КонецОбласти 
