///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ОбновлениеВерсииИБ

////////////////////////////////////////////////////////////////////////////////
// Сведения о библиотеке (или конфигурации).

Процедура ПриДобавленииПодсистемы(Описание) Экспорт
    Описание.Имя = "ЛичныеФинансы";
    Описание.Версия = "1.0.1.3";
    
    // Требуется библиотека стандартных подсистем.
    Описание.ТребуемыеПодсистемы.Добавить("СтандартныеПодсистемы");
КонецПроцедуры

Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.НачальноеЗаполнение = Истина;
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыЛФ.СоздатьСтатьиЗатрат";
		
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "1.0.1.3";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыЛФ.СоздатьСтатьиЗатрат";
	Обработчик.РежимВыполнения     = "Монопольно";
	
	    
КонецПроцедуры

Процедура ПередОбновлениемИнформационнойБазы() Экспорт
    
КонецПроцедуры

Процедура ПослеОбновленияИнформационнойБазы(Знач ПредыдущаяВерсия, Знач ТекущаяВерсия,
        Знач ВыполненныеОбработчики, ВыводитьОписаниеОбновлений, МонопольныйРежим) Экспорт
    
	КонецПроцедуры 
	
Процедура ПриПодготовкеМакетаОписанияОбновлений(Знач Макет) Экспорт
    
КонецПроцедуры

Процедура ПриДобавленииОбработчиковПереходаСДругойПрограммы(Обработчики) Экспорт
    
КонецПроцедуры 

Процедура ПриОпределенииРежимаОбновленияДанных(РежимОбновленияДанных, СтандартнаяОбработка) Экспорт
    
КонецПроцедуры

Процедура ПриЗавершенииПереходаСДругойПрограммы(Знач ПредыдущееИмяКонфигурации, Знач ПредыдущаяВерсияКонфигурации, Параметры) Экспорт
    
КонецПроцедуры

// Конец СтандартныеПодсистемы.ОбновлениеВерсииИБ

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

////////////////////////////////////////////////////////////////////////////////
// Заполнение пустой ИБ

Процедура СоздатьСтатьиЗатрат() Экспорт
	
	Макет = Справочники.СтатьиЗатрат.ПолучитьМакет("СтатьиПоУмолчанию");
	
	ОбластьЗначенияПоУмолчанию = Макет.ПолучитьОбласть("ЗначенияПоУмолчанию");
	
	ИменаОбластей = Новый Массив();
	
	Для К = 1 По ОбластьЗначенияПоУмолчанию.ВысотаСтраницы Цикл
		ИмяЗатраты = ОбластьЗначенияПоУмолчанию.Область(К,1).Текст;
		ИменаОбластей.Добавить(СокрЛП(ИмяЗатраты));
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Наименования", ИменаОбластей);
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатьиЗатрат.Наименование
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|ГДЕ
	|	СтатьиЗатрат.Наименование В (&Наименования)";
	
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Наименование");
	
	Для Каждого Элемент Из ИменаОбластей Цикл
		Если НЕ Результат.Найти(Элемент) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СпрОбъект = Справочники.СтатьиЗатрат.СоздатьЭлемент();
		СпрОбъект.Заполнить(Неопределено);
		СпрОбъект.Наименование = Элемент;
		
		Если СпрОбъект.ПроверитьЗаполнение() Тогда
			Попытка
				СпрОбъект.Записать();
			Исключение
				ЗаписьЖурналаРегистрации("СоздатьСтатьиЗатрат",УровеньЖурналаРегистрации.Ошибка,,,ИнформацияОбОшибке().Описание);
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти


#КонецОбласти
